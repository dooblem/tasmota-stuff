>D

; PowerOnState 1
; SetOption0 0 - do not save power state (avoids too many writes on flash)

http=0
preh=0
sun=0
;has been hot once in day
dhot=0
lky=0
;previous lky value
lkyp=0
prd=0
cso=0
i=0

n1=0
n0=0
;arrays of 3 elements
m:r1=0 3
m:r0=0 3

;resistor locked
lck=0
pic=0
;the real num of res, inc locked
n=0

; timer used to pause execution a few secs to disable flapping
; if timer is not null. pause
t:tmr=0

; the cumulus is OK. other loads can use energy. ie pool pump
g:cuOk=0

;;;;;;;;;;;;;;;;;;;;;;;;;;
>S

; every 20s
if upsecs%20!=0 {
 break
}

if (sun==0 and time>sunrise and time<sunset)
{
 sun=1
 ;;;;; we also remove flag files in salon crontab
 print SunRise. dhot=0 cuOk=0
 dhot=0
 ; reset udp global var. x2 qos
 cuOk=0
 cuOk=0
}
if (sun==1 and time>sunset)
{
 sun=0
 print SunSet. Turn off
 =>Power2 1
 =>Power3 1
 =>Power4 1
 =#resEvent(0)
}

if (hours==11 and preh==10 and dhot==0)
{
 print Ensure 1 resistor ON. Lock it
 ; if no res ON, turn ON one. else pick a random res ON
 =#initRes
 if n0==0 {
  =#pwrRndOff
  lck=pic
  =#resEvent(1)
 } else {
  pic=r0[1+rnd(n0)]
  lck=pic
 }
} else {
if (hours==19 and preh==18)
{
 print Lock resistor end
 lck=0
}
}
preh=hours

; only in sun hours when no timer set
if (tmr==0 and time>sunrise and time<sunset)
{
 ; get shelly data
 http=1
 http("__SHELLY_IP__" "/status")
 http=0
}

;;;;;;;;;;;;;;;;;;;;;;;;;;
>E
; be sure the event is our http req
if http==1 {
 http=0
} else {
 break
}

=#initRes

;print pwr %pwr[2]% %pwr[3]% %pwr[4]%
;print n1=%0n1% r1 %0r1[1]% %0r1[2]% %0r1[3]%
;print n0=%0n0% r0 %0r0[1]% %0r0[2]% %0r0[3]%

lkyp=lky
; delim power. get 2nd field. comma as limit
lky=gwr("\"power\":" 2 ,)
prd=gwr("\"power\":" 3 ,)
cso=lky+prd

print TEST %lky% <-2490<-1660<-700 >2690>1860>200 prd:%0prd% cso:%0cso% lck:%0lck% (n0:%0n0% %0r0[1]%-%0r0[2]%-%0r0[3]%) (n1:%0n1% %0r1[1]%-%0r1[2]%-%0r1[3]%)

; mean resistance power: 830

; take into account the locked resistor for the hot test and webquery
if lck==0 {
 n=n0
} else {
 n=n0+1
}

; check if hot
; 750*2=1500 750*3=2250
if ((n==1 and cso<750) or (n==2 and cso<1500) or (n==3 and cso<2250))
{
 dhot=1
 print Cumulus is HOT. unlock. cuOk=1. Sleep 5m
 tmr=300
 lck=0
 ;->WebQuery http://192.168.1.8/?hot=1 GET
 ;set global udp var. x2 for qos
 cuOk=1
 cuOk=1
}

;;; turn on. off instead
; use previous lky val to be sure we are really injecting

; 3 on
; 830*3=2490
if (lky<-2490 and lkyp<-2490 and n1==3)
{
 =>Power2 0
 =>Power3 0
 =>Power4 0
 =#resEvent(3)
 break
}
; 2 on
; 830*2=1660
; (n+2)*830+50<prd - do not start resistor over production
if (lky<-1660 and lkyp<-1660 and n1>=2 and n+2*830+50>=prd)
{
 print SKIP 2on prd
}
if (lky<-1660 and lkyp<-1660 and n1>=2 and n+2*830+50<prd)
{
 =#pwrRndOff
 =#initRes
 =#pwrRndOff
 =#resEvent(n+2)
 break
}
; 1 on
if (lky<-700 and lkyp<-700 and n1>=1 and n+1*700+50>=prd)
{
 print SKIP 1on prd
}
if (lky<-700 and lkyp<-700 and n1>=1 and n+1*700+50<prd)
{
 =#pwrRndOff
 =#resEvent(n+1)
 break
}

;;; turn off. on instead

; 3 off
; 830*3+200=2690
if (lky>2690 and n0==3)
{
 =>Power2 1
 =>Power3 1
 =>Power4 1
 =#resEvent(0)
 break
}
; 2 off
; 830*2+200=1860
if (lky>1860 and n0>=2)
{
 =#pwrRndOn
 =#initRes
 =#pwrRndOn
 =#resEvent(n-2)
 break
}
; 1 off
; n*700+50>prd - off if we are over production
if (n0>=1 and (lky>200 or n*700+50>prd))
{
 if (lky<=200)
 {
  print FORCE 1off prd
 }
 =#pwrRndOn
 =#resEvent(n-1)
 break
}

;;;;;;; subroutines ;;;;;
#initRes
n1=0
n0=0

for i 2 4 1
; ignore if locked
if i!=lck {
 if pwr[i]==1 {
  r1[n1+1]=i
  n1+=1
 } else {
  r0[n0+1]=i
  n0+=1
 }
}
next

;;;
; pick a random res in array
#pwrRndOff
pic=r1[1+rnd(n1)]
=>Power%0pic% 0

#pwrRndOn
pic=r0[1+rnd(n0)]
=>Power%0pic% 1

#resEvent(n)
tmr=60
;set global udp var. x2 for qos
if (dhot==1 or n==3)
{
 cuOk=1
 cuOk=1
} else {
 cuOk=0
 cuOk=0
}
;->WebQuery http://192.168.1.8/?nbres=%0n% GET
