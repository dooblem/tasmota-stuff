>D 40

;k;;; VALEURS A MODIFIER CI-DESSOUS

;shelly ip address
;k; Adresse ip du shelly
ip="__SHELLY_IP__"

; linky limit value to turn ON
;k; puissance linky ON
lkyON=-700
; linky limit value to turn OFF
;k; puissance linky OFF
lkyOFF=50

; force hour
;k; heure a laquelle on force la pompe
fh=11

; seconds to wait after ON/OFF
;k; temps min attente entre chaque ON/OFF
wait=300

;k; temps pompe par mois: voir lignes mo[ plus bas dans le program

;k;;; FIN VALEURS A MODIFIER

; Other info to fill bellow:
; {influxdb info}
; {lky}

;;;;;;;;;

; table of linky records: 5 minutes. you should update {print lkys list} bellow as well.
m:lkys=0 5

; true if every 60s
e6=0

; perm vars keep the order !
;pump minutes
p:pm=0
;pm yesterday
p:pmy=0

;pm daily target (max)
pmt=0
;pump target by month
m:mo=0 12

lky=0
http=0
; timer used to pause execution a few secs to disable flapping
; if timer is not null. pause
t:tmr=0
; previous hour
preh=0

;parameter or index
i=0

;from shelly2influx
p0=""
t0=""
tr0=""
p1=""
t1=""
tr1=""

; mode auto ?
au=1

;;;;;;;;;;;;;;;;;;;;;;;; on script start
>B
mo[1]=1
mo[2]=1
mo[3]=2
mo[4]=3
mo[5]=5
mo[6]=7
mo[7]=9
mo[8]=9
mo[9]=6
mo[10]=6
mo[11]=2
mo[12]=1

>W
bu(au "AUTO" "Manuel")

Pompe Today : %0pm% mn
Pompe Yesterday : %0pmy% mn
Max jour : %0pmt% mn
Force apres %0fh%h00 si %0pm%+%0pmy%<%0pmt%

;;;;;;;;;;;;;;;;;;;;;;;;
>S

; every 30s: get shelly values
if upsecs%30==0 {

; every 60s
if upsecs%60==0 {
e6=1
; initialize pm target. will run once at boot
; not working in >B because month is not set yet
if pmt==0 {
 =#setPmt
}

; at midnight
if (hours==0 and preh==23)
{
 print New day
 ;save minutes into yesterday. reset today minutes
 pmy=pm
 pm=0
 svars
 =#setPmt
}
preh=hours

; increment mins if power on
if pwr[1]==1 {
 pm+=1
 ; save permanent vars if in pump cycle. every hour otherwise we may break the flash mem
 if upsecs%3600==0 {
  svars
 }
}

} else {
e6=0
}

; this is every 30s
lky=0
http=1
http(ip "/status")
http=0

; this is after http req so maybe a few secs later so upsecs%60 KO
; every 60s: insert in lkys array, pump management
if e6==1 {

; insert into array (even at night)
lkys=lky

; pump management when timer ok, and sun hours
if (tmr!=0 or time<sunrise or time>sunset or au==0)
{
 break
}

; {print lkys list: update to match lkys size}
print pwr:%0pwr[1]% pm:%0pm%+%0pmy%<%0pmt% lky:%lky% [%lkys[1]% %lkys[2]% %lkys[3]% %lkys[4]% %lkys[5]%] <%0lkyON% >%0lkyOFF%

; if force hour passed and pump mins today+yesterday not reached, force ON
if (hours>fh and pm+pmy<pmt)
{
 if pwr[1]==0 {
  print Force pump ON
  =#setPump(1)
 }
 break
}

; block to set pump ON
if (pwr[1]==0 and pm<pmt)
{
 ;get max. ignore zero values
 lky=-99999
 for i 1 lkys[-1] 1
  if (lkys[i]!=0 and lkys[i]>lky)
  {
   lky=lkys[i]
  }
 next
 print max:%lky%

 if lky<lkyON {
  =#setPump(1)
 }

; block to set pump OFF
} else {
if pwr[1]==1
{
 if pm>pmt {
  =#setPump(0)

 } else {
  ;get min
  lky=99999
  for i 1 lkys[-1] 1
   if (lkys[i]!=0 and lkys[i]<lky)
   {
    lky=lkys[i]
   }
  next
  print min:%lky%

  if lky>lkyOFF {
   =#setPump(0)
  }
 }
}
}

; end if e6 60s
}

; end if 30s
}

;LedPower
; in configuration, set gpio16 to LedLink
; set gpio13 (LedLink) to Led_i
;;;;;;;;;;;;;;;;;;;;;;;;
>E
; be sure the event is our http req
if http==1 {
 http=0
} else {
 ; mode change
 if au==1 {
  ->LedPower 1
 } else {
  ->LedPower 0
 }
 break
}

p0=gwr("\"power\":" 2 ,)
t0=gwr("\"total\":" 2 ,)
tr0=gwr("\"total_returned\":" 2 ,)
tr0=st(tr0 '}' 1)

p1=gwr("\"power\":" 3 ,)
t1=gwr("\"total\":" 3 ,)
tr1=gwr("\"total_returned\":" 3 ,)
tr1=st(tr1 '}' 1)

print shellyem 0.power=%p0% 0.total=%t0% 0.total_returned=%tr0% 1.power=%p1% 1.total=%t1% 1.total_returned=%tr1%

; {influxdb info: fill in bellow}
->WebQuery __GRAFANA_URL__ POST [X-Key:__XKEY__]shellyem 0.power=%p0%,0.total=%t0%,0.total_returned=%tr0%,1.power=%p1%,1.total=%t1%,1.total_returned=%tr1%\npoolpump power=%1enrg[7]%,total=%5enrg[0]%

; {lky: p0 if linky value is on the 1st clamp, p1 if on 2nd clamp}
lky=p0
;lky=gwr("\"power\":" 2 ,)

;;;;;;;;;;;;;;;;;;;;;;;;
#setPump(i)
print Set pump %0i%. Wait %0wait%s
=>Power %0i%
tmr=wait
; save permanent vars if off as we finished a pump cycle
if i==0 {
 svars
}

#setPmt
pmt=mo[month]*60
print Pump minutes target today: %0pmt%
